version: '3.1'

services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #     ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider  

  kafka:
    image: confluentinc/cp-server:latest
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_USER: 0vs5rme2
      KAFKA_ZOOKEEPER_PASSWORD: v9nEFfJXDswDQHyGLt6eq3l_UTRRhq3G
      KAFKA_CLIENT_USERS: dani
      KAFKAJS_NO_PARTITIONER_WARNING: 1
      # KAFKA_CLIENT_PASSWORDS: 8sgd-ZhLEdV_JKugXAG3de3eHiLnc9Pp
      KAFKA_CERTIFICATE_PASSWORD: certificatePassword123
      KAFKA_TLS_TYPE: JKS # or PEM
      # 
      KAFKA_BROKER_ID: moped-01.srvs.cloudkafka.com:9094,moped-02.srvs.cloudkafka.com:9094,moped-03.srvs.cloudkafka.com:9094
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://moped-01.srvs.cloudkafka.com:9094
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.KAFKA_ZOOKEEPER_CONNECT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'